@page "/Registration"
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@inject IUserService UserService

<div class="card">
    <h3>Register</h3>
    <div class="form-group field">
        <label>User name:</label>
        <input type="text" @bind="Username" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(ResultMsg))
        {
            <label style="color: @Color">@ResultMsg</label>
        }
    </div>
    <div class="form-group field">
        <label>Password:</label>
        <input type="text" @bind="Password" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(ResultMsg))
        {
            <label style="color: @Color">@ResultMsg</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="Create" disabled="@(string.IsNullOrEmpty(Username))" class="acceptbtn">Register</button>
    </div>
</div>

@code {
    private string Username = "";
    private string Password = "";
    private string ResultMsg = "";
    private string Color = "";

    private async Task Create()
    {
        ResultMsg = "";

        try
        {
            await UserService.Create(new UserCreationDto(Username, Password));
            Username = "";
            ResultMsg = "User successfully created";
            Color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            ResultMsg = e.Message;
            Color = "red";
        }
    }
}